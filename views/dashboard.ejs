<%- include("partials/header4Dash.ejs") %>

<div class="container mt-5">
  <div class="d-flex justify-content-center">
    <h1 class="display-5 fw-bold" style="color: black">
      CashCompass Financial Advisor Dashboard
    </h1>
  </div>

  <!-- Search Form -->
  <h2 class="text-center mb-2" style="color: black">Search for a User</h2>
  <div class="d-flex justify-content-center mt-1">
    <div
      class="card shadow-lg p-4 rounded-4"
      style="
        max-width: 95vh;
        width: 100%;
        background: linear-gradient(135deg, #6e85b7, #b2c8df);
        color: white;
      "
    >
      <form action="/dashboard" method="GET" class="text-center mt-4">
        <label for="userId" class="form-label fw-bold">Enter User ID:</label>
        <input
          type="text"
          id="userId"
          name="userId"
          class="form-control form-control-lg rounded-pill text-center"
          placeholder="Enter User ID"
          required
        />
        <button type="submit" class="btn btn-primary mt-2">
          Search Client
        </button>
      </form>
    </div>
  </div>

  <!-- User Info Display -->
  <% if (user) { %>
  <h1 class="display-5 fw-bold text-center">Client Dashboard</h1>
  <table class="table table-bordered mt-3">
    <tr>
      <th>Name</th>
      <td><%= user.name %></td>
    </tr>
    <tr>
      <th>Email</th>
      <td><%= user.email %></td>
    </tr>
    <tr>
      <th>User ID</th>
      <td><%= user.userId %></td>
    </tr>
    <tr>
      <th>Total Transactions</th>
      <td><%= user.transactions.length %></td>
    </tr>
  </table>

  <h4 class="mt-4">Recent Transactions</h4>
  <table class="table table-striped">
    <thead class="table-dark">
      <tr>
        <th>Date</th>
        <th>Description</th>
        <th>Merchant</th>
        <th>Category</th>
        <th>Amount (USD)</th>
        <th>Type</th>
      </tr>
    </thead>
    <tbody>
      <% user.transactions.forEach(transaction => { %>
      <tr>
        <td><%= transaction.date %></td>
        <td><%= transaction.description %></td>
        <td><%= transaction.merchant %></td>
        <td><%= transaction.category %></td>
        <td>$<%= transaction.amount.toFixed(2) %></td>
        <td><%= transaction.type %></td>
      </tr>
      <% }) %>
    </tbody>
  </table>

  <!-- Charts Section -->
  <div class="mt-5">
    <h3 class="text-center">Financial Overview</h3>
    <div class="row">
      <div class="col-md-6">
        <canvas id="expenseChart"></canvas>
      </div>
      <div class="col-md-6">
        <canvas id="portfolioChart"></canvas>
      </div>
    </div>
  </div>
  <% } else { %>
  <div class="alert alert-danger mt-4">User Not Found</div>
  <% } %>
</div>

<%- include("partials/footer.ejs") %>

<!-- Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<!-- Embed user data into a JavaScript variable and then build the chart -->
<!-- Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<!-- Embed user data into a JavaScript variable and then build the charts -->
<script>
  <% if (user) { %>
    const userData = <%- JSON.stringify(user) %>;
  <% } else { %>
    const userData = null;
  <% } %>

  if (userData && userData.transactions && userData.transactions.length > 0) {
    // Prepare data by category
    const expenseCategories = {};
    userData.transactions.forEach((transaction) => {
      if (!expenseCategories[transaction.category]) {
        expenseCategories[transaction.category] = 0;
      }
      expenseCategories[transaction.category] += transaction.amount;
    });

    const expenseLabels = Object.keys(expenseCategories);
    const expenseData = Object.values(expenseCategories);

    /****************************************
     * Bar Chart (Monthly Expenses)
     ****************************************/
    const expenseCtx = document
      .getElementById("expenseChart")
      .getContext("2d");
    new Chart(expenseCtx, {
      type: "bar",
      data: {
        labels: expenseLabels,
        datasets: [
          {
            label: "Monthly Expenses",
            data: expenseData,
            backgroundColor: [
              "rgba(255, 99, 132, 0.2)",
              "rgba(54, 162, 235, 0.2)",
              "rgba(255, 206, 86, 0.2)",
              "rgba(75, 192, 192, 0.2)",
              "rgba(153, 102, 255, 0.2)",
              "rgba(255, 159, 64, 0.2)",
            ],
            borderColor: [
              "rgba(255, 99, 132, 1)",
              "rgba(54, 162, 235, 1)",
              "rgba(255, 206, 86, 1)",
              "rgba(75, 192, 192, 1)",
              "rgba(153, 102, 255, 1)",
              "rgba(255, 159, 64, 1)",
            ],
            borderWidth: 1,
          },
        ],
      },
      options: {
        responsive: true,
        scales: {
          y: {
            beginAtZero: true,
          },
        },
      },
    });

    /****************************************
     * Pie Chart (Category Breakdown)
     ****************************************/
    const portfolioCtx = document
      .getElementById("portfolioChart")
      .getContext("2d");
    new Chart(portfolioCtx, {
      type: "pie",
      data: {
        labels: expenseLabels,
        datasets: [
          {
            label: "Expenses by Category",
            data: expenseData,
            backgroundColor: [
              // Use distinct colors for each category slice
              "rgba(255, 99, 132, 0.6)",
              "rgba(54, 162, 235, 0.6)",
              "rgba(255, 206, 86, 0.6)",
              "rgba(75, 192, 192, 0.6)",
              "rgba(153, 102, 255, 0.6)",
              "rgba(255, 159, 64, 0.6)",
              // Add more colors if you have more categories
            ],
          },
        ],
      },
      options: {
        responsive: true,
      },
    });
  } else {
    console.log("No valid transactions data available for charts.");
  }
</script>
